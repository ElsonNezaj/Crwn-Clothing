{"ast":null,"code":"var _jsxFileName = \"/home/elson/crwn-clothing/src/pages/shoppage/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/collections.overview.jsx';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"sources":["/home/elson/crwn-clothing/src/pages/shoppage/shop.component.jsx"],"sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport CollectionsOverview from '../../components/collection-overview/collections.overview.jsx'\nimport CollectionPage from '../collection/collection.component'\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\nimport { updateCollections } from '../../redux/shop/shop.actions.js'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component.jsx'\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true,\n  }\n\n  unsubscribeFromSnapshot = null\n\n  componentDidMount() {\n    const { updateCollections } = this.props\n    const collectionRef = firestore.collection('collections')\n\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      updateCollections(collectionsMap)\n    })\n  }\n\n  render() {\n    const { match } = this.props\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage)\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,+DAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,iBAAT,QAAkC,kCAAlC;AAEA,OAAOC,WAAP,MAAwB,0DAAxB;;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;EAAA;IAAA;IAAA,KACrCC,KADqC,GAC7B;MACNC,OAAO,EAAE;IADH,CAD6B;IAAA,KAKrCC,uBALqC,GAKX,IALW;EAAA;;EAOrCC,iBAAiB,GAAG;IAClB,MAAM;MAAEP;IAAF,IAAwB,KAAKQ,KAAnC;IACA,MAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;IAEAD,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;MAC3C,MAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;MACAZ,iBAAiB,CAACa,cAAD,CAAjB;IACD,CAHD;EAID;;EAEDC,MAAM,GAAG;IACP,MAAM;MAAEC;IAAF,IAAY,KAAKP,KAAvB;IACA,oBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;QAAoC,SAAS,EAAEpB;MAA/C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QACE,IAAI,EAAG,GAAEmB,KAAK,CAACC,IAAK,gBADtB;QAEE,SAAS,EAAEnB;MAFb;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AA5BoC;;AA+BvC,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;EACxClB,iBAAiB,EAAGa,cAAD,IACjBK,QAAQ,CAAClB,iBAAiB,CAACa,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAelB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf"},"metadata":{},"sourceType":"module"}