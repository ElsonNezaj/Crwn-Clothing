{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // updateCollections(collectionsMap)\n\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","UPDATE_COLLECTIONS","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","setState","loading"],"sources":["/home/elson/crwn-clothing/src/redux/shop/shop.actions.js"],"sourcesContent":["import ShopActionTypes from './shop.types'\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections')\n\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      // updateCollections(collectionsMap)\n      this.setState({ loading: false })\n    })\n  }\n}\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;EAC1CC,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;EAC9C,OAAQC,QAAD,IAAc;IACnB,MAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;IAEAD,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;MACrC,MAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD,CADqC,CAErC;;MACA,KAAKE,QAAL,CAAc;QAAEC,OAAO,EAAE;MAAX,CAAd;IACD,CAJD;EAKD,CARD;AASD,CAVM"},"metadata":{},"sourceType":"module"}