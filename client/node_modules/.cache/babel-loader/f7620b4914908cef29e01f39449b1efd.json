{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from '@redux-saga/core'; // import { configureStore } from '@reduxjs/toolkit'\n\nimport rootReducer from './root-reducer';\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["createStore","applyMiddleware","logger","persistStore","thunk","createSagaMiddleware","rootReducer","middlewares","process","env","NODE_ENV","push","store","persistor"],"sources":["/home/elson/crwn-clothing/src/redux/store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport { persistStore } from 'redux-persist'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from '@redux-saga/core'\n\n// import { configureStore } from '@reduxjs/toolkit'\n\nimport rootReducer from './root-reducer'\n\nconst middlewares = [thunk]\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger)\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nconst persistor = persistStore(store)\n\nexport { store, persistor }\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,kBAAjC,C,CAEA;;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,WAAW,GAAG,CAACH,KAAD,CAApB;;AAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;EAC1CH,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAED,MAAMU,KAAK,GAAGZ,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGM,WAAJ,CAA7B,CAAzB;AAEA,MAAMM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBC,SAAhB"},"metadata":{},"sourceType":"module"}