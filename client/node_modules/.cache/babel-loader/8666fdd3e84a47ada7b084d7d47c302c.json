{"ast":null,"code":"var _jsxFileName = \"/home/elson/crwn-clothing/src/components/sign-in/signin.component.jsx\";\nimport React from 'react';\nimport './signin.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils.js';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your e-mail and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          label: \"E-mail\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \" Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            onClick: signInWithGoogle,\n            isGoogleSignIn: true,\n            children: \"Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"names":["React","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","signInWithEmailAndPassword","setState","err","console","error","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"sources":["/home/elson/crwn-clothing/src/components/sign-in/signin.component.jsx"],"sourcesContent":["import React from 'react'\nimport './signin.styles.scss'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils.js'\nimport { googleSignInStart } from '../../redux/user/user.actions'\n\nimport { connect } from 'react-redux'\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n    }\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n\n    const { email, password } = this.state\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password)\n      this.setState({ email: '', password: '' })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  handleChange = (e) => {\n    const { value, name } = e.target\n\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    return (\n      <div className=\"sign-in\" onSubmit={this.handleSubmit}>\n        <h2>I already have an account</h2>\n        <span>Sign in with your e-mail and password</span>\n\n        <form>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            value={this.state.email}\n            handleChange={this.handleChange}\n            label=\"E-mail\"\n            required\n          ></FormInput>\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label=\"Password\"\n            required\n          ></FormInput>\n\n          <div className=\"buttons\">\n            <CustomButton type=\"submit\"> Sign In</CustomButton>\n            <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\n              Sign In With Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n})\nexport default connect(null, mapDispatchToProps)(SignIn)\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,kCAAvC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;EACnCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KASnBC,YATmB,GASJ,MAAOC,CAAP,IAAa;MAC1BA,CAAC,CAACC,cAAF;MAEA,MAAM;QAAEC,KAAF;QAASC;MAAT,IAAsB,KAAKC,KAAjC;;MAEA,IAAI;QACF,MAAMb,IAAI,CAACc,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAN;QACA,KAAKG,QAAL,CAAc;UAAEJ,KAAK,EAAE,EAAT;UAAaC,QAAQ,EAAE;QAAvB,CAAd;MACD,CAHD,CAGE,OAAOI,GAAP,EAAY;QACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACD;IACF,CApBkB;;IAAA,KAsBnBG,YAtBmB,GAsBHV,CAAD,IAAO;MACpB,MAAM;QAAEW,KAAF;QAASC;MAAT,IAAkBZ,CAAC,CAACa,MAA1B;MAEA,KAAKP,QAAL,CAAc;QAAE,CAACM,IAAD,GAAQD;MAAV,CAAd;IACD,CA1BkB;;IAGjB,KAAKP,KAAL,GAAa;MACXF,KAAK,EAAE,EADI;MAEXC,QAAQ,EAAE;IAFC,CAAb;EAID;;EAqBDW,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,SAAf;MAAyB,QAAQ,EAAE,KAAKf,YAAxC;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE;QAAA,wBACE,QAAC,SAAD;UACE,IAAI,EAAC,OADP;UAEE,IAAI,EAAC,OAFP;UAGE,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAHpB;UAIE,YAAY,EAAE,KAAKQ,YAJrB;UAKE,KAAK,EAAC,QALR;UAME,QAAQ;QANV;UAAA;UAAA;UAAA;QAAA,QADF,eASE,QAAC,SAAD;UACE,IAAI,EAAC,UADP;UAEE,IAAI,EAAC,UAFP;UAGE,KAAK,EAAE,KAAKN,KAAL,CAAWD,QAHpB;UAIE,YAAY,EAAE,KAAKO,YAJrB;UAKE,KAAK,EAAC,UALR;UAME,QAAQ;QANV;UAAA;UAAA;UAAA;QAAA,QATF,eAkBE;UAAK,SAAS,EAAC,SAAf;UAAA,wBACE,QAAC,YAAD;YAAc,IAAI,EAAC,QAAnB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,YAAD;YAAc,OAAO,EAAElB,gBAAvB;YAAyC,cAAc,MAAvD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAlBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAgCD;;AA9DkC;;AAiErC,MAAMuB,kBAAkB,GAAIC,QAAD,KAAe;EACxCvB,iBAAiB,EAAE,MAAMuB,QAAQ,CAACvB,iBAAiB,EAAlB;AADO,CAAf,CAA3B;;AAGA,eAAeC,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCpB,MAAlC,CAAf"},"metadata":{},"sourceType":"module"}