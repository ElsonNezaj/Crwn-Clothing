{"ast":null,"code":"var _jsxFileName = \"/home/elson/crwn-clothing/src/components/sign-in/signin.component.jsx\";\nimport React, { useState } from 'react';\nimport './signin.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your e-mail and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        handleChange: handleChange,\n        label: \"E-mail\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        handleChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","handleSubmit","e","preventDefault","props","email","password","state","handleChange","value","name","target","setState","mapDispatchToProps","dispatch"],"sources":["/home/elson/crwn-clothing/src/components/sign-in/signin.component.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './signin.styles.scss'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from '../../redux/user/user.actions'\n\nimport { connect } from 'react-redux'\n\nconst SignIn = () => {\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const { emailSignInStart } = this.props\n    const { email, password } = this.state\n\n    emailSignInStart(email, password)\n  }\n\n  const handleChange = (e) => {\n    const { value, name } = e.target\n\n    this.setState({ [name]: value })\n  }\n\n  const { googleSignInStart } = this.props\n  return (\n    <div className=\"sign-in\" onSubmit={handleSubmit}>\n      <h2>I already have an account</h2>\n      <span>Sign in with your e-mail and password</span>\n\n      <form>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={this.state.email}\n          handleChange={handleChange}\n          label=\"E-mail\"\n          required\n        ></FormInput>\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={this.state.password}\n          handleChange={handleChange}\n          label=\"Password\"\n          required\n        ></FormInput>\n\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\"> Sign In</CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign In With Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n})\nexport default connect(null, mapDispatchToProps)(SignIn)\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,+BAHP;AAKA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;IACA,MAAM;MAAEL;IAAF,IAAuB,KAAKM,KAAlC;IACA,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAsB,KAAKC,KAAjC;IAEAT,gBAAgB,CAACO,KAAD,EAAQC,QAAR,CAAhB;EACD,CAND;;EAQA,MAAME,YAAY,GAAIN,CAAD,IAAO;IAC1B,MAAM;MAAEO,KAAF;MAASC;IAAT,IAAkBR,CAAC,CAACS,MAA1B;IAEA,KAAKC,QAAL,CAAc;MAAE,CAACF,IAAD,GAAQD;IAAV,CAAd;EACD,CAJD;;EAMA,MAAM;IAAEZ;EAAF,IAAwB,KAAKO,KAAnC;EACA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAyB,QAAQ,EAAEH,YAAnC;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAA,wBACE,QAAC,SAAD;QACE,IAAI,EAAC,OADP;QAEE,IAAI,EAAC,OAFP;QAGE,KAAK,EAAE,KAAKM,KAAL,CAAWF,KAHpB;QAIE,YAAY,EAAEG,YAJhB;QAKE,KAAK,EAAC,QALR;QAME,QAAQ;MANV;QAAA;QAAA;QAAA;MAAA,QADF,eASE,QAAC,SAAD;QACE,IAAI,EAAC,UADP;QAEE,IAAI,EAAC,UAFP;QAGE,KAAK,EAAE,KAAKD,KAAL,CAAWD,QAHpB;QAIE,YAAY,EAAEE,YAJhB;QAKE,KAAK,EAAC,UALR;QAME,QAAQ;MANV;QAAA;QAAA;QAAA;MAAA,QATF,eAkBE;QAAK,SAAS,EAAC,SAAf;QAAA,wBACE,QAAC,YAAD;UAAc,IAAI,EAAC,QAAnB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,YAAD;UACE,IAAI,EAAC,QADP;UAEE,OAAO,EAAEX,iBAFX;UAGE,cAAc,MAHhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD,CApDD;;KAAMG,M;;AAsDN,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;EACxCjB,iBAAiB,EAAE,MAAMiB,QAAQ,CAACjB,iBAAiB,EAAlB,CADO;EAExCC,gBAAgB,EAAE,CAACO,KAAD,EAAQC,QAAR,KAChBQ,QAAQ,CAAChB,gBAAgB,CAAC;IAAEO,KAAF;IAASC;EAAT,CAAD,CAAjB;AAH8B,CAAf,CAA3B;;AAKA,eAAeP,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCb,MAAlC,CAAf"},"metadata":{},"sourceType":"module"}