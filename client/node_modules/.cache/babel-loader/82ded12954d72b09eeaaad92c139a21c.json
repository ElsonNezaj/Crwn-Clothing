{"ast":null,"code":"var _jsxFileName = \"/home/elson/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport './signup.styles.scss';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state; // if (password !== confirmPassword) {\n      //   alert(\"Passwords don't match\")\n      //   return\n      // }\n      // try {\n      //   const { user } = await auth.createUserWithEmailAndPassword(\n      //     email,\n      //     password\n      //   )\n      //   await createUserProfileDocument(user, { displayName })\n      //   this.setState({\n      //     displayName: '',\n      //     email: '',\n      //     password: '',\n      //     confirmPassword: '',\n      //   })\n      // } catch (err) {\n      //   console.error(err)\n      // }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    const {\n      signUpStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"I do not have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          onChange: this.handleChange,\n          label: \"Display Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: this.handleChange,\n          label: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          onClick: signUpStart,\n          children: [' ', \"SIGN UP\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: () => dispatch(signUpStart())\n});\n\nexport default SignUp;","map":{"version":3,"names":["React","FormInput","CustomButton","auth","createUserProfileDocument","connect","signUpStart","SignUp","Component","constructor","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","handleChange","name","value","target","setState","render","props","mapDispatchToProps","dispatch"],"sources":["/home/elson/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"sourcesContent":["import React from 'react'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nimport { connect } from 'react-redux'\n\nimport './signup.styles.scss'\nimport { signUpStart } from '../../redux/user/user.actions'\n\nclass SignUp extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    }\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault()\n\n    const { displayName, email, password, confirmPassword } = this.state\n\n    // if (password !== confirmPassword) {\n    //   alert(\"Passwords don't match\")\n    //   return\n    // }\n\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(\n    //     email,\n    //     password\n    //   )\n    //   await createUserProfileDocument(user, { displayName })\n\n    //   this.setState({\n    //     displayName: '',\n    //     email: '',\n    //     password: '',\n    //     confirmPassword: '',\n    //   })\n    // } catch (err) {\n    //   console.error(err)\n    // }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state\n\n    const { signUpStart } = this.props\n\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\">I do not have an account</h2>\n        <span>Sign up with your email and password</span>\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            onChange={this.handleChange}\n            label=\"Display Name\"\n            required\n          ></FormInput>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            label=\"Email\"\n            required\n          ></FormInput>\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            label=\"Password\"\n            required\n          ></FormInput>\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label=\"Confirm Password\"\n            required\n          ></FormInput>\n          <CustomButton type=\"submit\" onClick={signUpStart}>\n            {' '}\n            SIGN UP{' '}\n          </CustomButton>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: () => dispatch(signUpStart()),\n})\n\nexport default SignUp\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}