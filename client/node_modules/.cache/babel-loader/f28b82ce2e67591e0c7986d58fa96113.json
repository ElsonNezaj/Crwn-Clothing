{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errormsg => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errormsg\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    console.log(collectionRef);\n    dispatch(fetchCollectionsStart);\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(err => dispatch(fetchCollectionsFailure(err.message)));\n  };\n};","map":{"version":3,"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errormsg","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","console","log","get","then","snapshot","catch","err","message"],"sources":["/home/elson/crwn-clothing/src/redux/shop/shop.actions.js"],"sourcesContent":["import ShopActionTypes from './shop.types'\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes,\n})\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n})\n\nexport const fetchCollectionsFailure = (errormsg) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errormsg,\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections')\n    console.log(collectionRef)\n    dispatch(fetchCollectionsStart)\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        dispatch(fetchCollectionsSuccess(collectionsMap))\n      })\n      .catch((err) => dispatch(fetchCollectionsFailure(err.message)))\n  }\n}\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;EAC1CC,IAAI,EAAEJ;AADoC,CAAP,CAA9B;AAIP,OAAO,MAAMK,uBAAuB,GAAIC,cAAD,KAAqB;EAC1DF,IAAI,EAAEJ,eAAe,CAACO,yBADoC;EAE1DC,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,QAAD,KAAe;EACpDN,IAAI,EAAEJ,eAAe,CAACW,yBAD8B;EAEpDH,OAAO,EAAEE;AAF2C,CAAf,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;EAC9C,OAAQC,QAAD,IAAc;IACnB,MAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;IACAC,OAAO,CAACC,GAAR,CAAYH,aAAZ;IACAD,QAAQ,CAACV,qBAAD,CAAR;IAEAW,aAAa,CACVI,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;MAClB,MAAMd,cAAc,GAAGJ,+BAA+B,CAACkB,QAAD,CAAtD;MACAP,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;IACD,CALH,EAMGe,KANH,CAMUC,GAAD,IAAST,QAAQ,CAACJ,uBAAuB,CAACa,GAAG,CAACC,OAAL,CAAxB,CAN1B;EAOD,CAZD;AAaD,CAdM"},"metadata":{},"sourceType":"module"}